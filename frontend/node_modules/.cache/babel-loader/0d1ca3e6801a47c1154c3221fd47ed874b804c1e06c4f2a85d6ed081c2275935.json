{"ast":null,"code":"var _jsxFileName = \"/home/heilige/cyberhack-ai/frontend/src/pages/Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { BarChart, Bar, XAxis, YAxis } from 'recharts';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport axios from 'axios';\n\n// Type for API response\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [target, setTarget] = useState('');\n  const [results, setResults] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleScan = async () => {\n    setLoading(true);\n    try {\n      const res = await axios.post('http://localhost:8000/scans/vuln', null, {\n        params: {\n          target\n        }\n      });\n      setResults(res.data);\n    } catch (err) {\n      console.error(err);\n    }\n    setLoading(false);\n  };\n  const handlePlaybook = async () => {\n    setLoading(true);\n    try {\n      const res = await axios.post('http://localhost:8000/scans/playbook/run', null, {\n        params: {\n          playbook_name: 'web_app_flow.yaml'\n        }\n      });\n      setResults(res.data);\n    } catch (err) {\n      console.error(err);\n    }\n    setLoading(false);\n  };\n  const chartData = results !== null && results !== void 0 && results.risk_score ? [{\n    name: 'Risk',\n    value: results.risk_score\n  }] : [{\n    name: 'Vulns',\n    value: 10\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          children: \"Vulnerability Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Enter target (e.g., example.com)\",\n          value: target,\n          onChange: e => setTarget(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleScan,\n          disabled: loading,\n          children: \"Run Scan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handlePlaybook,\n          disabled: loading,\n          children: \"Run Web Playbook\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Scanning...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 23\n        }, this), results && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n            children: JSON.stringify(results.results, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n            width: 600,\n            height: 300,\n            data: chartData,\n            children: [/*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"value\",\n              fill: \"#8884d8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"lyCeMOOUds4KQudX7PqTQPBntCw=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","Card","CardContent","CardHeader","CardTitle","BarChart","Bar","XAxis","YAxis","Input","Button","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","target","setTarget","results","setResults","loading","setLoading","handleScan","res","post","params","data","err","console","error","handlePlaybook","playbook_name","chartData","risk_score","name","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","e","onClick","disabled","JSON","stringify","width","height","dataKey","fill","_c","$RefreshReg$"],"sources":["/home/heilige/cyberhack-ai/frontend/src/pages/Dashboard.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { BarChart, Bar, XAxis, YAxis } from 'recharts';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport axios from 'axios';\n\n// Type for API response\ninterface ScanResult {\n  results?: string[];\n  risk_score?: number;\n}\n\nconst Dashboard: React.FC = () => {\n  const [target, setTarget] = useState('');\n  const [results, setResults] = useState<ScanResult | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleScan = async () => {\n    setLoading(true);\n    try {\n      const res = await axios.post('http://localhost:8000/scans/vuln', null, { params: { target } });\n      setResults(res.data);\n    } catch (err) {\n      console.error(err);\n    }\n    setLoading(false);\n  };\n\n  const handlePlaybook = async () => {\n    setLoading(true);\n    try {\n      const res = await axios.post('http://localhost:8000/scans/playbook/run', null, { params: { playbook_name: 'web_app_flow.yaml' } });\n      setResults(res.data);\n    } catch (err) {\n      console.error(err);\n    }\n    setLoading(false);\n  };\n\n  const chartData = results?.risk_score ? [{ name: 'Risk', value: results.risk_score }] : [{ name: 'Vulns', value: 10 }];\n\n  return (\n    <div className=\"p-4\">\n      <Card>\n        <CardHeader>\n          <CardTitle>Vulnerability Dashboard</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <Input\n            placeholder=\"Enter target (e.g., example.com)\"\n            value={target}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setTarget(e.target.value)}\n          />\n          <Button onClick={handleScan} disabled={loading}>Run Scan</Button>\n          <Button onClick={handlePlaybook} disabled={loading}>Run Web Playbook</Button>\n          {loading && <p>Scanning...</p>}\n          {results && (\n            <>\n              <pre>{JSON.stringify(results.results, null, 2)}</pre>\n              <BarChart width={600} height={300} data={chartData}>\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Bar dataKey=\"value\" fill=\"#8884d8\" />\n              </BarChart>\n            </>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}